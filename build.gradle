plugins {
    id 'java'
    id 'war'
    id 'jacoco'
    id "org.sonarqube" version '3.0'
}

group 'de.brachwitz.leon'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

[
    "integrationtests",
    "slf4j",
].each {
    apply from: "gradle/${it}.gradle"
}

ext {
    junitVersion = '5.6.2'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compileOnly('javax:javaee-api:8.0')
    implementation('org.primefaces:primefaces:7.0')
    implementation('org.projectlombok:lombok:1.18.12')
    implementation('com.google.guava:guava:28.0-jre')
    implementation('org.hibernate:hibernate-core:5.3.7.Final')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    annotationProcessor "org.projectlombok:lombok:1.18.12"
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/jacoco")
}

task mergeJacocoReports(type: JacocoReport) {
    dependsOn test, integrationTest
    sourceDirectories.setFrom files(sourceSets.main.allSource.srcDirs)
    classDirectories.setFrom files(sourceSets.main.output)
    executionData.setFrom project.fileTree(dir: '.', include: '**/build/jacoco/*.exec')
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
        html.destination file("${buildDir}/jacoco/merge")
        xml.destination file("${buildDir}/jacoco/merge.xml")
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "LeonBrachwitz_Minesweeper"
        property "sonar.organization", "leonbrachwitz"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/jacoco/merge.xml"
    }
}

tasks['sonarqube'].dependsOn mergeJacocoReports